<!DOCTYPE html>

<html lang="en" class="fluigiPage">
<head>
    <title> {{title}} </title>
    <link rel="stylesheet" href="http://cdn.webix.com/edge/webix.css" type="text/css">
    <script src="http://cdn.webix.com/edge/webix.js" type="text/javascript"></script>
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="../stylesheets/main.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
    <script src="../javascripts/settings.js" > </script>
    <link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.12/css/jquery.dataTables.css">
    <script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.12/js/jquery.dataTables.js"></script>

    <!--Template for valves to be placed over graph canvas-->
    <template id="valve-template" >
        <div class ="valve" id="nootnoot">
            <a class="valve_marker" href="" >
                <img class="valve_color" src="../images/fluigi/valveMarkerOpen.svg" width="18.5" height="43">
            </a>
        </div>
    </template>

    <script>
        //Local Storage Inializations
        {
            localStorage.clear();
            localStorage.settings_toggle = "settings_is_closed";
            localStorage.hide = 0;
            localStorage.settings_button_has_been_pressed_before = false;
            //localStorage.dataCenter = new Object();
            localStorage.pumpData = [];
            localStorage.unsavedData = [];
            localStorage.oldPumpData = [];
            localStorage.pumps = 11;
            localStorage.settings_X_pos = 200;
            localStorage.settings_Y_pos = 200;
            localStorage.close_pressed_last = false;
            localStorage.DataToLoad;
            localStorage.clear_toggle = false;
            localStorage.dataTable_config = [
                {id: "Pump_Number", header: "Pump Number", width: 50},
                {id: "Open_State", header: "Open State", width: 200, editor: "text"},
                {id: "Closed_State", header: "Closed State", width: 80, editor: "text"}
            ];
            localStorage.set_pump_page_is_open = false;
            localStorage.pumpData = clearPumpData();
        }
    </script>

</head>

<body>

<!--Fluigi Navigation Bar-->
<nav class="navbar navbar-fixed-top">
    <div class="container-fluid">

        <div class="navbar-header">
            <a class="navbar-brand" >
                <img alt="Brand" src="../images/fluigi/fluigiLogoFluigi.png">
            </a>
        </div>


        <div>
            <ul class="nav navbar-nav">
                <li class="nav-item"><a class="nav-link" href="../"> <img src="../images/fluigi/homeButtonTransparent.png"> </a>
                </li>
                <li class="nav-item"> <a class="nav-link"> <img onclick="settingsButtonPressed();" src="../images/fluigi/settingsIcon.png"> </a>
                </li>
            </ul>
        </div>
    </div>
</nav>



<!--Draw Canvas (resize to page width/height in js)-->
<div id="container">
    <canvas id="canvasID" ></canvas>
    <!--JS to draw SVG in canvas-->
    <script src="../javascripts/fluigiGraph.js" type="application/javascript"></script>
    <!--This is where valves go!-->
    <div id="content"></div>
</div>


<!--Upload Bar-->
<div id= "upload_bar" class="uploadbar" >
    <div id="div1">
        <form id="uploadForm"
              enctype="multipart/form-data"
              action="/api/photo"
              method="post">
            <input id= "inputfile" class="inputButton" type="file" name="myjson" />
            <br/>
            <input id="uploadfile" class= "inputButton" type="submit" value="Upload JSON" name="submit">
            <span id = "status"></span>
            <br/>

        </form>
    </div>
    <div id="div2">
            <form id="uploadForm2"
                  enctype="multipart/form-data"
                  action="/api/svg"
                  method="post">
                <input id= "inputfile2" onmouseover="popup('Input a JSON File')" class="inputButton" type="file" name="mysvg" />
                <br/>
                <input id="uploadfile2" class= "inputButton" type="submit" value="Upload SVG" name="submit">
                <span id = "status2"></span>
            </form>
        </div>
</div>



<!-- LEAVE JS FOR LAST - faster loading time -->
<!-- Latest compiled and minified JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>

</body>

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/jquery.form/3.51/jquery.form.min.js"></script>

<script>
    //Upload AJAX Forms
    {
        $(document).ready(function () {

            $('#uploadForm').submit(function () {
                $("#status").empty().text("File is uploading...");

                $(this).ajaxSubmit({

                    error: function (xhr) {
                        status('Error: ' + xhr.status);
                    },
                    success: function (response) {
                        console.log(response);
                        $("#status").empty().text(response);


                        // Json successfully uploaded
                        var fileOfChoice = "../uploads/myjson.json";
                        $.getJSON(fileOfChoice, function (json) {
                            //alert('awesome possum');

                            //console.log( Object.keys( json.name ).length ) ;
//                            for(i=0; i < Object.keys( json.name ).length; i++) {
//                                console.log('plz');
//
//
//                            }
                            //console.log (json.hasOwnProperty('name: flow'));



                            // Use Json as a string
                            jsonString = JSON.stringify(json);
                            var controlOnly;

                            // figure out indices of flow and control and cut json_string to substring to only contain control
                            flowIndex = jsonString.search('flow');
                            controlIndex = jsonString.search('control');
                            if(flowIndex < controlIndex){   // control is after flow
                                controlOnly = jsonString.substr(controlIndex);
                            }
                            else {  // control is before flow
                                controlOnly = jsonString.substr(controlIndex, (flowIndex-controlIndex));
                            }

                            // Now look for all Port in the control layer only
                            var Re = /Port.+?\[(.+?),(.+?)\].+?"radius1":(.+?),"radius2":(.+?),/g;
                            var myArray;
                            var portArray = [];
                            var portX = [];
                            var portY = [];
                            var portRadius1 = [];
                            var portRadius2 = [];


                            while ((myArray = Re.exec(controlOnly)) !== null) {
                                //console.log(myArray);
                                portX.push(myArray[1]);
                                portY.push(myArray[2]);
                                portRadius1.push(myArray[3]);
                                portRadius2.push(myArray[4]);
                                portArray.push(myArray.index);
                            }
                            console.log("Port string index: " + portArray);
                            console.log("Port X coordinates: " + portX);
                            console.log("Port Y coordinates: " + portY);
                            console.log("Port Radius1: " + portRadius1);
                            console.log("Port Radius2: " + portRadius2);













                            // method using Json as JSON OBJECT
//                            for( var i=0; i < (Object.keys(json.layers)).length; i++) { // there will be 2 -> flow and control
//                                //console.log(json.layers[i].name);
//                                //console.log(Object.keys(json.layers[i].params));
//                                if(json.layers[i].name == 'flow') {
//                                    console.log(Object.keys(json.layers[0].features));
//                                    //console.log(json.layers[i].name);
//                                }
//                            }








                            // Set the variables from the results array
//                            var name = json.layers[0].name;
//                            console.log('name : ', name);

//                            var latitude = json.results[0].geometry.location.lat;
//                            console.log('Latitude : ', latitude);
//
//                            var longitude = json.results[0].geometry.location.lng;
//                            console.log('Longitude : ', longitude);
//
//                            // Set the table td text
//                            $('#address').text(address);
//                            $('#latitude').text(latitude);
//                            $('#longitude').text(longitude);
                        });

                    }
                });

                return false;
            });
            $('#uploadForm2').submit(function () {
                $("#status2").empty().text("File is uploading...");

                $(this).ajaxSubmit({

                    error: function (xhr) {
                        status('Error: ' + xhr.status);
                    },
                    success: function (response) {
                        console.log(response);
                        $("#status2").empty().text(response);

                    }
                });

                return false;
            });
        });
    }





</script>

</html>

